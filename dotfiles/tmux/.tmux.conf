############## tmux config ##############

# default shell
# set-option -g default-shell /usr/bin/fish

# set prefix key
set -g prefix C-b

# enable mouse
set-option -g mouse on

bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# history
set-option -g history-limit 100000

# reduce delay
set-option -sg escape-time 10
set-option -g repeat-time 500

# terminal color
set-option -g default-terminal "screen-256color"
#set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

# status-bar position
# set-option -g status-position top


# index number
set -g base-index 0
set -g pane-base-index 0

# monitor
setw -g monitor-activity on

# select pane (like vim)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize pane
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

# remove pane
bind q kill-pane

# create new window
bind c new-window -c '#{pane_current_path}'

# split window

# vertical
bind | split-window -h -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
# horizon
bind - split-window -v -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'


# copy mode
# CAUTION:
# clipboardとの連携は思ったより大変そう(OS依存性が残りそう)
# ref: https://qiita.com/purutane/items/1d1dc4818013bbbaead4

# copy mode keybind
setw -g mode-keys vi

# 'v' normal selection
bind -T copy-mode-vi v send -X begin-selection

# 'V' line selection
bind -T copy-mode-vi V send -X select-line

# 'C-v' rectangle selection
bind -T copy-mode-vi C-v send -X rectangle-toggle

# 'y' yank
bind -T copy-mode-vi y send -X copy-selection

# 'Y' line yank
bind -T copy-mode-vi Y send -X copy-line

# # 'C-p' paste
# bind-key C-p paste-buffer

# 'p' paste
bind-key -T copy-mode-vi p send-keys -X paste-buffer

# 'i' to normal mode
bind-key -T copy-mode-vi i send-keys -X cancel

# focus-events
set-option -g focus-events on

# ===== logging =====
# before logging, do `mkdir -p ${HOME}/.tmux/log`
# C-b C-p Start logging.
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# C-b C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# C-b v Open new window. Logging always. (-n is set window name.)
bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'
