#!/usr/bin/env bash
set -euxo pipefail

# get script path
SCRIPT_DIR="$(cd "$(dirname "$0")"; pwd)"
cd "$SCRIPT_DIR"

OS="$(uname -s)"
ARCH="$(uname -m)"

VERSION="$(curl --silent "https://api.github.com/repos/BurntSushi/ripgrep/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')"

# or gnu
INSTALL_PATH="${HOME}/LocalApps"
EXECTIVE_PATH="${HOME}/bin"

if [ "$OS" = "Linux" ]; then
    PACKAGE="ripgrep-${VERSION}-${ARCH}-unknown-linux-gnu"
elif [ "$OS" = "Darwin" ]; then
    case "$ARCH" in
        arm64)
            PACKAGE="ripgrep-${VERSION}-aarch64-apple-darwin"
            ;;
        x86_64)
            PACKAGE="ripgrep-${VERSION}-x86_64-apple-darwin"
            ;;
        *)
            echo "Unsupported architecture: $ARCH" >&2
            exit 1
    esac
else
    echo "Unsupported OS: $OS" >&2
    exit 1
fi
DOWNLOAD_URL="https://github.com/BurntSushi/ripgrep/releases/download/${VERSION}/${PACKAGE}.tar.gz"

# download
curl -LO "${DOWNLOAD_URL}"

# install
tar zxvf "${PACKAGE}.tar.gz"     # inflate
if [ ! -d "${INSTALL_PATH}" ]; then
    mkdir -p "${INSTALL_PATH}"
fi

if [ -d "${INSTALL_PATH}/${PACKAGE}" ];then
    rm -rf "${INSTALL_PATH}/${PACKAGE}"
fi

if [ "$OS" = Darwin ]; then
    mv "${PACKAGE}" "${INSTALL_PATH}"
else
    mv "${PACKAGE}" -t "${INSTALL_PATH}"
fi

# remove trash
rm "${PACKAGE}.tar.gz"

# make synbolic link
ln -sfv "${INSTALL_PATH}/${PACKAGE}/rg" "${EXECTIVE_PATH}/rg"

echo "ripgrep Ver: ${VERSION} has been installed"
