#!/usr/bin/env bash
set -euxo pipefail

# get script path
SCRIPT_DIR="$(cd "$(dirname "$0")"; pwd)"
cd "$SCRIPT_DIR"

OS="$(uname -s)"
ARCH="$(uname -m)"

VERSION="v$(curl --silent "https://api.github.com/repos/duckdb/duckdb/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')"

INSTALL_PATH="${HOME}/LocalApps"
EXECTIVE_PATH="${HOME}/bin"

# ZIPFILE="duckdb_cli-${OS}-${CPU_ARCH}.zip"
if [ "$OS" = "Linux" ]; then
    case "$ARCH" in
        x86_64)
            BINARY_NAME="duckdb_cli-linux-amd64"
            GZIPFILE="${BINARY_NAME}.gz"
            ;;
        aarch64)
            BINARY_NAME="duckdb_cli-linux-aarch64"
            ;;
        *)
            echo "Unsupported architecture: $ARCH" >&2
            exit 1
    esac
elif [ "$OS" = "Darwin" ]; then
    BINARY_NAME="duckdb_cli-osx-universal"
else
    echo "Unsupported OS: $OS" >&2
    exit 1
fi

GZIPFILE="${BINARY_NAME}.gz"
DOWNLOAD_URL="https://github.com/duckdb/duckdb/releases/download/${VERSION}/${GZIPFILE}"

WORK_DIR="__TMP__"
if [ -d "${WORK_DIR}" ]; then
    rm -rf "${WORK_DIR}"
fi
mkdir "${WORK_DIR}"
cd "${WORK_DIR}"
curl -LO "${DOWNLOAD_URL}"
# extract "duckdb" binary
gzip -d "${GZIPFILE}"
chmod +x "${BINARY_NAME}"
mv "./${BINARY_NAME}" "${INSTALL_PATH}/duckdb"
ln -sfv "${INSTALL_PATH}/duckdb" "${EXECTIVE_PATH}/duckdb"

# cleanup
cd ..
rm -rf "${WORK_DIR}"

echo "duckdb ${VERSION} has been installed."
