#!/usr/bin/env bash
set -euxo pipefail

# get script path
SCRIPT_DIR="$(
	cd "$(dirname "$0")"
	pwd
)"
cd "$SCRIPT_DIR"

OS="$(uname -s)"
ARCH="$(uname -m)"

VERSION="v$(curl --silent "https://api.github.com/repos/mvdan/sh/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')"

INSTALL_PATH="${HOME}/LocalApps"
EXECTIVE_PATH="${HOME}/bin"

if [ "$OS" = "Linux" ]; then
	case "$ARCH" in
		x86_64)
			DOWNLOAD_URL="https://github.com/mvdan/sh/releases/download/${VERSION}/shfmt_${VERSION}_linux_amd64"
			;;
		aarch64)
			DOWNLOAD_URL="https://github.com/mvdan/sh/releases/download/${VERSION}/shfmt_${VERSION}_linux_arm64"
			;;
		*)
            echo "Unsupported architecture: $ARCH" >&2
			exit 1
	esac
elif [ "$OS" = "Darwin" ]; then
	case "$ARCH" in
		x86_64)
			DOWNLOAD_URL="https://github.com/mvdan/sh/releases/download/${VERSION}/shfmt_${VERSION}_darwin_amd64"
			;;
		aarch64)
			DOWNLOAD_URL="https://github.com/mvdan/sh/releases/download/${VERSION}/shfmt_${VERSION}_darwin_arm64"
			;;
		*)
            echo "Unsupported architecture: $ARCH" >&2
			exit 1
	esac
else
    echo "Unsupported OS: $OS" >&2
    exit 1
fi

WORK_DIR="__TMP__"
mkdir "${WORK_DIR}"
cd "${WORK_DIR}"
curl -L "${DOWNLOAD_URL}" -o shfmt
chmod +x shfmt
mv shfmt "${INSTALL_PATH}/shfmt"
ln -sfv "${INSTALL_PATH}/shfmt" "${EXECTIVE_PATH}/shfmt"

# cleanup
cd ..
rm -rf "${WORK_DIR}"

echo "Complete installing shfmt ver: ${VERSION} (OS: ${OS}, ARCH: ${ARCH})."
